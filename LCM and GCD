Given two integers a and b, write a function lcmAndGcd() to compute their LCM and GCD. The function takes two integers a and b as input and returns a list containing their LCM and GCD.
Example 1:
Input: a = 5 , b = 10
Output: 10 5
Explanation: LCM of 5 and 10 is 10, while thier GCD is 5.
Input: a = 14 , b = 8
Output: 56 2
Explanation: LCM of 14 and 8 is 56, while thier GCD is 2.

class Solution {
  public:
    vector<long long> lcmAndGcd(long long A , long long B) {
        
        vector<long long> lcmGcd;
        long long gcd, lcm, product;
        product = abs(A * B);
        
        // Calculating GCD using Eucledean algorithm
        while(A > 0 && B > 0) {
            
            if(A > B) {
                A = A % B;      
            }               // keep modding the bigger number
            else {
                B = B % A; 
            }
                      
        }
        if(A == 0) {
            gcd = B;
        } 
        else {
            gcd = A;
        }
        
        // easiest formula of LCM
        lcm = product / gcd;
        
        lcmGcd.push_back(lcm);
        lcmGcd.push_back(gcd);
        
        return lcmGcd;
    }
};
