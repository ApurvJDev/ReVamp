Given an array arr, return the second largest distinct element from an array. If the second largest element doesn't exist then return -1.

Examples:

Input: arr = [12, 35, 1, 10, 34, 1]
Output: 34
Explanation: The largest element of the array is 35 and the second largest element is 34.
Input: arr = [10, 10]
Output: -1
Explanation: The largest element of the array is 10 and the second largest element does not exist so answer is -1.


class Solution {
  public:
    int print2largest(vector<int> &arr) {
        
        if( (arr.size() == 2) && (arr[0] == arr[1]) ) {  //The expression arr.begin() == arr.end() checks if the beginning iterator of the array is equal to the ending iterator, which would only be true if the array is empty.
            return -1;
        }
        
        int largest = 0, larger = 0;
        
        //find the largest element in the array
        for(int i = 0; i < arr.size(); i++) {
            if(arr[i] > largest) {
                largest = arr[i];
            }
        }
        
        //find the position of the largest element in the vector
        auto it = find(arr.begin(), arr.end(), largest);
        
        //erase the largest element from the vector
        arr.erase(it);
        
        //find the larger element in the array
        for(int i = 0; i < arr.size(); i++) {
            if(arr[i] > larger) {
                larger = arr[i];
            }
        }
        return larger;
    }
};
