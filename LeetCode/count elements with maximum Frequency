You are given an array nums consisting of positive integers.

Return the total frequencies of elements in nums such that those elements all have the maximum frequency.

The frequency of an element is the number of occurrences of that element in the array.

 

Example 1:

Input: nums = [1,2,2,3,1,4]
Output: 4
Explanation: The elements 1 and 2 have a frequency of 2 which is the maximum frequency in the array.
So the number of elements in the array with maximum frequency is 4.
Example 2:

Input: nums = [1,2,3,4,5]
Output: 5
Explanation: All elements of the array have a frequency of 1 which is the maximum.
So the number of elements in the array with maximum frequency is 5.

class Solution {
public:
    int freq(int query, vector<int>& nums) {
        int frequency = 0;
        for(int i = 0; i < nums.size(); i++) {
            if(nums[i] == query) {
                frequency += 1;
            }
        }
        return frequency;
    }
    int findMax(vector<int>& freqArr) {
        int max = 0;
        for(int i = 0; i < freqArr.size(); i++) {
            if(freqArr[i] > max) {
                max = freqArr[i];
            }
        }
        return max;
    }

    int maxFrequencyElements(vector<int>& nums) {
        set<int> uniq;
        vector<int> freqArr;
        int max, frequency;
        // store unique elements in set
        for(int i = 0; i < nums.size(); i++) {
            uniq.insert(nums[i]);
        }
        // find freq and store in freqArr
        for(auto i : uniq) {
            freqArr.push_back(freq(i, nums));
        }
        // call function to find max
        max = findMax(freqArr);
        frequency = max;
        for(int i = 0; i < freqArr.size(); i++) {
            if(freqArr[i] == max) {
                frequency = frequency + max;
            }
        }
        return frequency - max;
    }
};
