Given an array nums of size n, return the majority element.
The majority element is the element that appears more than ⌊n / 2⌋ times. You may assume that the majority element always exists in the array.
Example 1:
Input: nums = [3,2,3]
Output: 3
Example 2:
Input: nums = [2,2,1,1,1,2,2]
Output: 2

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        unordered_map<int, int>hashMap;
        // store number and its frequency
        for(int i : nums) {
            hashMap[i]++;
        }
        int maxVal = 0, maxElement;
        for(auto it = hashMap.begin(); it != hashMap.end(); it++) {
            if(it->second > maxVal) {
                maxVal = it->second;
                maxElement = it->first;
            }
        }
        return maxElement;
    }
};
