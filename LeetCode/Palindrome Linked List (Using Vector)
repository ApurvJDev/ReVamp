Given the head of a singly linked list, return true if it is a palindrome or false otherwise.
Example 1:
Input: head = [1,2,2,1]
Output: true
Example 2:
Input: head = [1,2]
Output: false

Constraints:
The number of nodes in the list is in the range [1, 105].
0 <= Node.val <= 9
Follow up: Could you do it in O(n) time and O(1) space?

bool isPalindrome(ListNode* head) {
        vector<ListNode*> vec;
        ListNode* curr = head;
        while(curr) {
            vec.push_back(curr);
            curr = curr->next;
        }
        int n = vec.size();
        for(int i = 0; i < n / 2; i++) {
            if(vec[i]->val != vec[n - i - 1]->val) {
                return false;
            }
        }
        return true;
    }
