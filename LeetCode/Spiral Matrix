vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> result;
        int top = 0, right = matrix[0].size() - 1, bottom = matrix.size() - 1, left = 0;

        while(top <= bottom && left <= right) {

            // printing first row
            for(int i = left; i <= right; i++) {
                result.push_back(matrix[top][i]);
            }
            top += 1; // top points to next row
            

            // printing last column
            for(int i = top; i <= bottom; i++) {
                result.push_back(matrix[i][right]);
            }
            right -= 1; // right moves left

            if(top <= bottom) {
                // printing last row in reverse order
                for(int i = right; i >= left; i--) {
                    result.push_back(matrix[bottom][i]);
                    cout << result.back() << ' ';
                }
                bottom -= 1; // bottom moves up
                cout << '\n';
            }
            
            if(left <= right) {
                // printing first column
                for(int i = bottom; i >= top; i--) {
                    result.push_back(matrix[i][left]);
                }
                left += 1; // left moves right
            }
            

        }
        return result;
    }
