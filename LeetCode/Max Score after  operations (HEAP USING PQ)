long long maxKelements(vector<int>& nums, int k) {
        long long score = 0;

        priority_queue<int> heap; // use priority queue to create max heap
        for(int i : nums) {
            heap.push(i);
        }

        while(k) {
            long maxNum = heap.top(); // find max number
            heap.pop(); // remove max number from heap
            score = score + maxNum;
            maxNum = (maxNum + 3 - 1) / 3; // (a + b - 1) / b => ceil division
            heap.push(maxNum); // add updated value in our heap
            k -= 1;
        }
        return score;
    }
