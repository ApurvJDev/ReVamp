Example 1:
Input: s = "the sky is blue"
Output: "blue is sky the"
Example 2:
Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.
Example 3:
Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.
 
Constraints:
1 <= s.length <= 104
s contains English letters (upper-case and lower-case), digits, and spaces ' '.
There is at least one word in s.



class Solution {
public:
    string reverseWords(string s) {
        stack<string> st;

        string substr = "";
        for(int i = 0; i < s.size(); i++) {
            if(s[i] == ' ') { // only push non empty substrings
                if(!substr.empty()) {
                    st.push(substr);
                    cout << substr << '\n';
                    substr = "";
                }
            }
            else {
                substr += s[i];
            }
        }
        if(!substr.empty()) {
            st.push(substr); // last word will not have space after it (if any)
        }

        string res = "";
        while(!st.empty()) {
            res += st.top() + " ";
            st.pop();
        }
        return res.substr(0, res.size() - 1);//extra space added after last word
    }
};
