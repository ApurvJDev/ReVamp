Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.
You must write an algorithm that runs in O(n) time.

Example 1:
Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
Example 2:
Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9

Constraints:
0 <= nums.length <= 105
-109 <= nums[i] <= 109

int longestConsecutive(vector<int>& nums) {
        int count = 1, maxCount = INT_MIN;

        if(nums.size() <= 1) {
            return nums.size();
        }

        sort(nums.begin(), nums.end());

        for(int i = 1; i < nums.size(); i++) {
            // consecutive
            if(nums[i - 1] + 1 == nums[i]) {
                count += 1;
            }
            // equal 
            else if(nums[i - 1] == nums[i]) {
                continue;
            } 
            // neither consecutive nor equal
            else {
                maxCount = max(maxCount, count);
                count = 1;
            }   
        }
        maxCount = max(maxCount, count);
        return maxCount;
    }
