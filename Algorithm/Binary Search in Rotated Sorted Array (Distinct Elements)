int search(vector<int>& arr, int n, int k)
{
    int l = 0, r = n - 1;

    while(l <= r) {
        int mid = (l + r) / 2;

        if(arr[mid] == k) {
            return mid;
        }
// if the right half of the array is sorted
        if(arr[mid] <= arr[r]) {
    // check if target lies b/w mid -> r
            if(arr[mid] <= k && k <= arr[r]) {
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
// if the left half of the array is sorted
        if(arr[mid] >= arr[l]) {
    // check if target lies b/w 0 -> mid 
            if(arr[l] <= k && k <= arr[mid]) {
                r = mid - 1;
            } else {
                l = mid + 1;
            }
        }
    }

    // Return the position of K in ARR else return -1.
    return -1;
}
