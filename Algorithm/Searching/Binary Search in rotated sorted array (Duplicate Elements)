bool search(vector<int>& nums, int target) {
        int l = 0, r = nums.size() - 1;

        while(l <= r) {
            int m = l + (r - l) / 2;

            if(nums[m] == target) {
                return true;
            } 
            if( (nums[l] == nums[m]) && (nums[r] == nums[m])) {
                l += 1; r -= 1;
            }
            // if the left half is sorted check if target is b/w 0 -> m
            else if(nums[m] >= nums[l]) {
                if(target < nums[m] && target >= nums[l]) {
                    r = m - 1;
                } else {
                    l = m + 1;
                }
            }
// if right half is sorted check if target is b/w m -> r
            else {
                if(target > nums[m] && target <= nums[r]) {
                    l = m + 1;
                } else {
                    r = m - 1;
                }
            }
        }
        return false;
    }
