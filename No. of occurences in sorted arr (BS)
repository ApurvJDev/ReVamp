Problem statement
You have been given a sorted array/list of integers 'arr' of size 'n' and an integer 'x'.
Find the total number of occurrences of 'x' in the array/list.

Sample Input 1:
7 3
1 1 1 2 2 3 3
Sample Output 1:
2

Sample Input 2:
 5 6
 1 2 4 4 5
Sample Output 2:
 0

Expected time complexity:
The expected time complexity is O(log 'n').

Constraints:
1 <= n <= 10^4
1 <= arr[i] <= 10^9
1 <= x <= 10^9
Where arr[i] represents the element i-th element in the array/list.

Time Limit: 1sec

#include <bits/stdc++.h>
using namespace std;

int count(vector<int>& arr, int n, int x) {
	int left = 0, right = n - 1, mid, count = 1;

	if(x < arr[0]) {
		return 0;
	}
	if(x > arr[n - 1]) {
		return 0;
	}

	while(left <= right) {
		mid = (left + right) / 2;

		if(arr[mid] == x) {
			break;
		}
		else if(arr[mid] < x) {
			left = mid + 1;
		} else {
			right = mid - 1;
		}
	}
	if(left > right) return 0;	// x not found in arr

	int l = mid - 1, r = mid + 1;

	while(l >= 0 && arr[l] == x) {	// checking left of target
		l -= 1;
		count += 1;
	}
	while(r <= n - 1 && arr[r] == x) {	// checking right of target
		r += 1;
		count += 1;
	}

	return count;
}	
